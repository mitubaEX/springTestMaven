buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}



apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "spring-boot"

group = 'com.example.mituba.test.server'
version = '0.0.1-SNAPSHOT'

description = """test-server"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}



repositories {
  jcenter()
  mavenLocal()
  maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.5.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version:'1.5.2.RELEASE'
    compile group: 'com.github.pochi', name: 'pochi-runner', version:'1.0-SNAPSHOT'
    /* compile group: 'com.mituba.searcher', name: 'MITUBA', version:'1.0' */
    compile group: 'org.apache.solr', name: 'solr-solrj', version: '6.5.0'
    compile group: 'org.apache.solr', name: 'solr-core', version: '6.5.0'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.5.2.RELEASE') {
exclude(module: 'commons-logging')
    }
}

jar {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes("Main-Class": "com.example.mituba.test.server.TestServerApplication")
    }

    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

